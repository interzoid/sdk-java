plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.moshi:moshi:1.15.0'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'org.glassfish:jakarta.el:4.0.2'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
}

test {
    useJUnitPlatform()
}

tasks.register('cleanDocs', Delete) {
    delete 'docs'
}

javadoc {
    title = "Interzoid Data Matching SDK"
    source = sourceSets.main.allJava
    options.overview = file("src/overview.html")
    options.addBooleanOption('html5', true)
    destinationDir = file("docs/javadoc")
    exclude 'com/interzoid/sdk/api/InterzoidApi.java'
    dependsOn cleanDocs
}

group 'com.interzoid'
version '0.1.0-SNAPSHOT'

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'data-matching-sdk'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Interzoid Data Matching SDK'
                description = 'Java SDK for the Interzoid Data Matching API'
                url = 'https://www.interzoid.com/services/data-matching-api'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'interzoid'
                        name = 'Interzoid'
                        email = 'support@interzoid.com'
                    }
                }
            }

            repositories {
                maven {
                    name = 'myRepo'
                    url = layout.buildDirectory.dir("repo")
                    def releasesRepoUrl = layout.buildDirectory.dir('repo/releases')
                    def snapshotsRepoUrl = layout.buildDirectory.dir('repo/snapshots')
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
